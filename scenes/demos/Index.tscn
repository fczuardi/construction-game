[gd_scene load_steps=18 format=3 uid="uid://ckdfysx2pcv7m"]

[ext_resource type="FontFile" uid="uid://bgn10o8bm34q6" path="res://imports/fonts/ArgulaRegular/Arugula20250312-Regular.ttf" id="1_rxmpw"]
[ext_resource type="PackedScene" uid="uid://3l7fe0kmxuqf" path="res://demos/PlayerControlsDemo.tscn" id="1_tqvmb"]
[ext_resource type="PackedScene" uid="uid://c26nq71crqott" path="res://demos/PlayerVisualsDemo.tscn" id="2_o6pdu"]
[ext_resource type="PackedScene" uid="uid://bxyr8dysao5ct" path="res://demos/FlatTerrainDemo.tscn" id="2_qugmx"]
[ext_resource type="Texture2D" uid="uid://dbn38v58mp2ko" path="res://imports/textures/SBS - Photorealistic Texture Pack 3/PTP-Ground_08-128x128.png" id="3_ji7lb"]
[ext_resource type="PackedScene" uid="uid://dkb5uhyt7ffpi" path="res://demos/PlayerRunnerDemo.tscn" id="4_2lln2"]
[ext_resource type="PackedScene" uid="uid://cdsqtykisydyo" path="res://demos/PlayerCamerasDemo.tscn" id="5_2lln2"]
[ext_resource type="PackedScene" uid="uid://ccjlcg6tf5mev" path="res://demos/SunDemo.tscn" id="5_o6pdu"]
[ext_resource type="PackedScene" uid="uid://bvqjumns0dvc1" path="res://slices/WalkOnEmptyGround.tscn" id="7_htab0"]
[ext_resource type="PackedScene" uid="uid://giqxuc0gq0fk" path="res://slices/Queensland.tscn" id="9_lgqbo"]

[sub_resource type="GDScript" id="GDScript_rxmpw"]
resource_name = "demo_index"
script/source = "class_name DemoIndex
extends Node3D
## Minimal demo hub: choose a demo and run it.

const VERSION := \"0.1.0\"

@export var demos: Array[PackedScene] = []      # drag your *Demo.tscn files here
@export var demo_names: Array[StringName] = []  # optional pretty names (same length as demos)

@export var slices: Array[PackedScene] = []
@export var slice_names: Array[StringName] = []

@onready var _demo_list: OptionButton = %DemoList
@onready var _slice_list: OptionButton = %SliceList
@onready var _play_demo: Button = %PlayBtn
@onready var _play_slice: Button = %PlayBtn2

func _ready() -> void:
    if _demo_list:
        _populate_demos()
    else:
        push_warning(\"DemoIndex: OptionButton 'DemoList' not found.\")
    if _slice_list:
        _populate_slices()
    else:
        push_warning(\"DemoIndex: OptionButton 'SliceList' not found.\")
    if _play_demo:
        _play_demo.pressed.connect(_on_play_demo)
    else:
        push_warning(\"DemoIndex: Button 'PlayBtn' not found.\")  
    if _play_slice:  
        _play_slice.pressed.connect(_on_play_slice)
    else:
        push_warning(\"DemoIndex: Button 'PlayBtn2' not found.\")  

func _populate_demos() -> void:
    _demo_list.clear()
    for i in demos.size():
        var label := String(demo_names[i]) \\
            if (i < demo_names.size() and String(demo_names[i]) != \"\") \\
            else demos[i].resource_path.get_file()
        _demo_list.add_item(label, i)
    _demo_list.select(0)

func _populate_slices() -> void:
    _slice_list.clear()
    for i in slices.size():
        var label := String(slice_names[i]) \\
            if (i < slice_names.size() and String(slice_names[i]) != \"\") \\
            else slices[i].resource_path.get_file()
        _slice_list.add_item(label, i)
    _slice_list.select(2)

func _on_play_demo() -> void:
    if _demo_list.item_count == 0:
        return
    var idx := _demo_list.get_selected_id()
    if idx < 0 or idx >= demos.size():
        return
    var ps := demos[idx]
    get_tree().root.set_meta(\"launched_from_index\", true)
    get_tree().change_scene_to_packed(ps)

func _on_play_slice() -> void:
    if _slice_list.item_count == 0:
        return
    var idx := _slice_list.get_selected_id()
    if idx < 0 or idx >= slices.size():
        return
    var ps := slices[idx]
    get_tree().root.set_meta(\"launched_from_index\", true)
    get_tree().change_scene_to_packed(ps)
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_8cld1"]
sky_top_color = Color(0.3234, 0.49731, 0.66, 1)
sky_horizon_color = Color(0.372643, 0.401698, 0.493167, 1)
ground_bottom_color = Color(0.055293, 0.0637129, 0.0753874, 1)
ground_horizon_color = Color(0.372643, 0.401698, 0.493167, 1)

[sub_resource type="Sky" id="Sky_lgqbo"]
sky_material = SubResource("ProceduralSkyMaterial_8cld1")

[sub_resource type="Environment" id="Environment_u5qyn"]
background_mode = 2
background_energy_multiplier = 0.7
sky = SubResource("Sky_lgqbo")
tonemap_mode = 2

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ji7lb"]
albedo_texture = ExtResource("3_ji7lb")
uv1_scale = Vector3(60, 60, 60)

[sub_resource type="BoxMesh" id="BoxMesh_tqvmb"]
size = Vector3(100, 1, 200)

[sub_resource type="GDScript" id="GDScript_htab0"]
resource_name = "resizecontainer"
script/source = "extends MarginContainer

func _ready() -> void:
    get_tree().get_root().size_changed.connect(_resize)
    _resize()

func _resize():
    var s := get_viewport_rect().size
    set_deferred(\"size\", s)    
"

[node name="Index" type="Node3D"]
script = SubResource("GDScript_rxmpw")
demos = Array[PackedScene]([ExtResource("4_2lln2"), ExtResource("2_o6pdu"), ExtResource("5_2lln2"), ExtResource("1_tqvmb"), ExtResource("2_qugmx"), ExtResource("5_o6pdu")])
demo_names = Array[StringName]([&"Player Body", &"Player Visuals", &"Player Cameras", &"Player Controls", &"Textured Flat Terrain", &"Sun Orbit"])
slices = Array[PackedScene]([ExtResource("7_htab0"), ExtResource("9_lgqbo")])
slice_names = Array[StringName]([&"Free Walk", &"Courthouse"])

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_u5qyn")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.971134, -0.100809, 0.216185, 0, 0.906307, 0.422618, -0.238533, 0.410419, -0.880147, 0, 0, 0)
shadow_enabled = true

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.999148, -0.0412653, 0, 0.0412653, 0.999148, 0, 1.72142, 1.99865)
current = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
material_override = SubResource("StandardMaterial3D_ji7lb")
mesh = SubResource("BoxMesh_tqvmb")

[node name="HUD" type="Control" parent="."]
custom_minimum_size = Vector2(540, 1200)
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="MarginContainer" type="MarginContainer" parent="HUD"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 60
theme_override_constants/margin_top = 60
theme_override_constants/margin_right = 60
theme_override_constants/margin_bottom = 60
script = SubResource("GDScript_htab0")

[node name="VBoxContainer" type="VBoxContainer" parent="HUD/MarginContainer"]
layout_mode = 2

[node name="Title" type="Label" parent="HUD/MarginContainer/VBoxContainer"]
layout_mode = 2
theme_override_fonts/font = ExtResource("1_rxmpw")
theme_override_font_sizes/font_size = 41
text = "Contractor Hero Tests

"
horizontal_alignment = 1

[node name="Vbox" type="VBoxContainer" parent="HUD/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="HUD/MarginContainer/VBoxContainer/Vbox"]
layout_mode = 2

[node name="Label" type="Label" parent="HUD/MarginContainer/VBoxContainer/Vbox/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Slices:"
horizontal_alignment = 1

[node name="SliceList" type="OptionButton" parent="HUD/MarginContainer/VBoxContainer/Vbox/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 24
alignment = 1

[node name="PlayBtn2" type="Button" parent="HUD/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_fonts/font = ExtResource("1_rxmpw")
theme_override_font_sizes/font_size = 100
text = "Play"

[node name="spacer3" type="Control" parent="HUD/MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="HUD/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="HUD/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Demos:"

[node name="DemoList" type="OptionButton" parent="HUD/MarginContainer/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
theme_override_font_sizes/font_size = 24

[node name="PlayBtn" type="Button" parent="HUD/MarginContainer/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
theme_override_fonts/font = ExtResource("1_rxmpw")
theme_override_font_sizes/font_size = 24
text = "Play"
